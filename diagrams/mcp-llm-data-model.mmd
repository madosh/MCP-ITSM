erDiagram
    CONVERSATION {
        string conversationId PK
        datetime createdAt
        datetime updatedAt
        string userId
        string status
        int messageCount
        bool isPersisted
    }
    
    MESSAGE {
        string messageId PK
        string conversationId FK
        string role
        string content
        datetime timestamp
        string type
        json metadata
    }
    
    METADATA {
        string metadataId PK
        string conversationId FK
        string key
        string value
        string dataType
    }
    
    EXTRACTED_DATA {
        string dataId PK
        string conversationId FK
        string messageId FK
        datetime extractedAt
        json data
        float confidence
    }
    
    ENTITY {
        string entityId PK
        string conversationId FK
        string messageId FK
        string type
        string value
        float confidence
        int startPosition
        int endPosition
    }
    
    PROMPT_TEMPLATE {
        string templateId PK
        string name
        string content
        string description
        string[] requiredParams
        datetime createdAt
        datetime updatedAt
    }
    
    TICKET_DATA {
        string ticketDataId PK
        string conversationId FK
        string summary
        string description
        string priority
        string category
        string systemType
        datetime createdAt
        json systemSpecificData
    }
    
    LLM_REQUEST {
        string requestId PK
        string conversationId FK
        string prompt
        datetime timestamp
        int tokenCount
        string modelVersion
        float temperature
        json parameters
    }
    
    LLM_RESPONSE {
        string responseId PK
        string requestId FK
        string content
        datetime timestamp
        int tokenCount
        float totalCost
        json completionInfo
    }
    
    CONVERSATION ||--o{ MESSAGE : contains
    CONVERSATION ||--o{ METADATA : has
    CONVERSATION ||--o{ EXTRACTED_DATA : generates
    MESSAGE ||--o{ ENTITY : contains
    MESSAGE ||--o{ EXTRACTED_DATA : produces
    CONVERSATION ||--o{ LLM_REQUEST : makes
    LLM_REQUEST ||--|| LLM_RESPONSE : receives
    CONVERSATION ||--o{ TICKET_DATA : creates 