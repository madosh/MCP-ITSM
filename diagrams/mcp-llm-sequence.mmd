sequenceDiagram
    participant User as User
    participant UI as Chat Client UI
    participant LLM as LLM Service
    participant MCP as Model Context Protocol
    participant CM as Context Manager
    participant CS as Conversation State
    participant PT as Prompt Templates
    participant ITSM as ITSM Adapter
    
    %% Initial user interaction
    User->>UI: Enter issue description
    User->>UI: Select ITSM system
    User->>UI: Submit request
    
    %% UI processing
    UI->>LLM: processTicketRequest(message, systemType, context)
    
    %% LLM interacts with Model Context Protocol
    LLM->>MCP: updateContext(context, userMessage)
    MCP->>CM: getContext(conversationId)
    CM->>CS: Current conversation state
    CS-->>CM: Return state
    CM-->>MCP: Return context
    
    %% Prompt creation with context
    LLM->>PT: getPromptWithParams(templateName, params)
    PT-->>LLM: Return system prompt with context
    
    %% LLM makes API call to language model
    LLM->>LLM: Call language model API
    
    %% Process LLM response
    LLM->>LLM: extractTicketData(llmResponse)
    
    %% Update context with extracted data
    LLM->>MCP: updateContext(context, { extractedData, response })
    MCP->>CM: addMessage(conversationId, assistantMessage)
    CM->>CS: addMessage(message)
    CM->>CS: addExtractedData(data)
    
    %% Return processed data to UI
    LLM-->>UI: Return ticket data & LLM response
    
    %% UI displays to user for confirmation
    UI->>User: Display extracted ticket information
    UI->>User: Request confirmation
    User->>UI: Confirm ticket creation
    
    %% Create ticket in selected system
    UI->>ITSM: createTicket(ticketData)
    ITSM->>ITSM: formatTicketForSystem(genericTicket)
    ITSM->>ITSM: Call ITSM API
    ITSM-->>UI: Return ticket ID & URL
    
    %% Update conversation with ticket creation info
    UI->>MCP: updateContext(context, { ticketId, ticketUrl })
    MCP->>CM: updateMetadata(conversationId, ticketInfo)
    CM->>CS: setMetadata(metadata)
    
    %% Show confirmation to user
    UI->>User: Display ticket creation confirmation
    
    %% Optional: Persist conversation
    CM->>CM: persistContext(conversationId)
    
    note over MCP,CS: Model Context Protocol maintains conversation<br>state throughout the entire process
    note over LLM,PT: LLM Service uses context to generate<br>appropriate responses based on conversation history
    note over UI,User: The UI presents extracted information for<br>review, improving accuracy and user control 